<?xml version="1.0"?>
<mx:WindowedApplication
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:mx="library://ns.adobe.com/flex/mx"
        xmlns:ms="http://ns.adobe.com/mxml/2009" applicationComplete="onApplicationCreated()">

    <ms:Script><![CDATA[
        import com.grom.HRLevelExporter.model.LevelModel;
        import com.grom.HRLevelExporter.project.LevelProject;
        import com.grom.HRLevelExporter.views.SelectLevelPopup;

        import mx.collections.ArrayList;
        import mx.controls.Alert;

        import net.maygem.lib.debug.Log;
        import net.maygem.lib.utils.UString;

        [Bindable]
        public var _project:LevelProject;
        private var _presenter:FlashLevelPresenter;

        private function onApplicationCreated():void
        {
            _project = new LevelProject();
            _presenter = new FlashLevelPresenter(this);
        }

        private function onClickSave():void
        {
            if (!_project.fileName)
            {
                var file:File = new File();
                file.addEventListener(Event.SELECT, function ():void
                {
                    _project.fileName = file.nativePath;
                    _project.save();
                });
                file.browseForSave("Save Project");
            }
            else
            {
                _project.save();
            }
        }

        private function onClickLoadSWF():void
        {
            var file:File = new File();
            file.addEventListener(Event.SELECT, function ():void
            {
                _project.swfFileName = file.nativePath;
            });
            file.browseForOpen("Load levels SWF", [new FileFilter("SWF", "*.swf")]);
        }

        private function onClickAddLevel():void
        {
            SelectLevelPopup.show(_project.classesList, function (modelsList:Array):void
            {
                for each (var model:LevelModel in modelsList)
                {
                    _project.levelsList.addItem(model);
                }
            });
        }

        private function onClickRemoveLevel():void
        {
            if (listSelectedLevels.selectedItem)
            {
                _project.levelsList.removeItem(listSelectedLevels.selectedItem);
            }
        }

        private function onClickExport():void
        {
            if (!_project.exportPath)
            {
                var file:File = new File();
                file.addEventListener(Event.SELECT, function ():void
                {
                    _project.exportPath = file.nativePath;
                    exportLevels();
                });
                file.browseForDirectory("Export To...");
            }
            else
            {
                exportLevels();
            }
        }

        private function exportLevels():void
        {
            Log.info("exporting levels to: " + _project.exportPath);

            var list:ArrayList = _project.levelsList.value;
            var selectedFiles:Array = list.toArray().sort(function(i1:LevelModel, i2:LevelModel):int
            {
                var diff:int = i1._levelDifficult - i2._levelDifficult;
                if (diff != 0)
                {
                    return diff;
                }

                var c1:String = i1._levelClass;
                var c2:String = i2._levelClass;

                if (c1 > c2)
                {
                    return 1;
                }
                else if (c1 < c2)
                {
                    return -1;
                }

                return 0;
            });
            var path:File = new File(_project.exportPath);

            var levelNum:int = _project.levelStartNum;
            for each (var lm:LevelModel in selectedFiles)
            {
                var levelName:String = "level" + UString.prefixZero(levelNum, 3) + ".xml";
                LevelExport.saveLevel(levelName, path, _project.getLevelMovie(lm._levelClass));
                levelNum ++;
            }

            Alert.show("All levels saved!");
        }

        private function onClickLoad():void
        {
            var file:File = new File();
            file.addEventListener(Event.SELECT, function ():void
            {
                _project.fileName = file.nativePath;
                _project = new LevelProject();
            });
            file.browseForOpen("Open levels project", [new FileFilter("Project file", "*.xml")]);
        }

        private function onClickNew():void
        {
            _project.fileName = null;
            _project = new LevelProject();
        }
        ]]></ms:Script>


    <s:VGroup width="100%" height="100%"
              paddingLeft="5"
              paddingRight="5"
              paddingTop="5"
              paddingBottom="5">
        <s:Label id="projectLabel" text="{_project.fileName}"/>
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Button label="New Project" click="onClickNew()"/>
            <s:Button label="Load..." click="onClickLoad()"/>
            <s:Button label="Save..." click="onClickSave()"/>
        </s:HGroup>
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Button label="Levels SWF..." click="onClickLoadSWF()"/>
            <s:Label text="{_project.swfFileName}"/>
        </s:HGroup>
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Button label="Export..." click="onClickExport()"/>
            <s:Label id="exportPath" text="{_project.exportPath}"/>
        </s:HGroup>
        <s:HGroup width="100%" height="100%">
            <s:VGroup height="100%">
                <s:List width="200" height="100%" dataProvider="{_project.classesList}"/>
            </s:VGroup>

            <s:VGroup height="100%">
                <s:HGroup verticalAlign="middle">
                    <s:Button label="Add level" click="onClickAddLevel()"/>
                    <s:Button label="Remove level" click="onClickRemoveLevel()"/>
                    <s:Label text="Level start number: "/>
                    <s:NumericStepper id="levelStartNum"
                                      value="{_project.levelStartNum}"
                                      minimum="0" maximum="1000"
                                      change="_project.levelStartNum = levelStartNum.value"/>
                </s:HGroup>
                <s:List id="listSelectedLevels" width="400" height="100%"
                        itemRenderer="com.grom.HRLevelExporter.views.LevelItemRenderer"
                        dataProvider="{_project.levelsList.value}"/>
            </s:VGroup>

        </s:HGroup>

        <s:HGroup verticalAlign="middle">
            <s:Button label="Game Executable..." click="_presenter.selectGameFile()"/>
            <s:Label text="{_project.gamePath}"/>
        </s:HGroup>

        <s:HGroup verticalAlign="middle">
            <s:Button label="Working Folder..." click="_presenter.selectWorkingFolder()"/>
            <s:Label text="{_project.workFolder}"/>
        </s:HGroup>

    </s:VGroup>
</mx:WindowedApplication>
