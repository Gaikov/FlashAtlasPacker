<?xml version="1.0"?>
<s:WindowedApplication
        xmlns:fx="http://ns.adobe.com/mxml/2009"
        xmlns:s="library://ns.adobe.com/flex/spark"
        xmlns:ms="http://ns.adobe.com/mxml/2009" xmlns:views="com.grom.HRLevelExporter.views.*"
        xmlns:levels="com.grom.HRLevelExporter.views.levels.*"
        applicationComplete="onApplicationCreated()"
        title="Levels Exporter - '{project.fileName ? project.fileName : 'new'}'">

    <ms:Script><![CDATA[
        import com.grom.HRLevelExporter.model.LevelModel;
        import com.grom.HRLevelExporter.project.LevelProject;
        import com.grom.HRLevelExporter.views.ItemsSelectionPopup;

        import mx.collections.ArrayList;

        import robotlegs.bender.bundles.mvcs.MVCSBundle;
        import robotlegs.bender.extensions.contextView.ContextView;
        import robotlegs.bender.framework.api.IContext;
        import robotlegs.bender.framework.impl.Context;

        [Bindable]
        public var project:LevelProject;

        private var _context:IContext;

        private function onApplicationCreated():void
        {
            _context = new Context()
                    .install(MVCSBundle)
                    .configure(LevelsAppConfig)
                    .configure(new ContextView(stage));
        }

        private function onClickLoadSWF():void
        {
            var file:File = new File();
            file.addEventListener(Event.SELECT, function ():void
            {
                project.swfFileName.value = file.nativePath;
            });
            file.browseForOpen("Load levels SWF", [new FileFilter("SWF", "*.swf")]);
        }

        private function onClickAddLevel():void
        {
            ItemsSelectionPopup.show(project.classesList, true, function (selectedList:Vector.<String>):void
            {
                for each (var name:String in selectedList)
                {
                    project.levelsList.addItem(new LevelModel(name));
                }
            });
        }

        private function onClickRemoveLevel():void
        {
            if (listSelectedLevels.selectedItem)
            {
                project.levelsList.removeItem(listSelectedLevels.selectedItem);
            }
        }


        private function createBackground(className:String, classesList:ArrayList):DisplayObject
        {
            return project.getLevelMovie(className);
        }
        ]]></ms:Script>


    <s:VGroup width="100%" height="100%"
              paddingLeft="5"
              paddingRight="5"
              paddingTop="5"
              paddingBottom="5">
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Button label="Levels SWF..." click="onClickLoadSWF()"/>
            <s:Label text="{project.swfFileName.value}"/>
        </s:HGroup>
        <s:HGroup width="100%" verticalAlign="middle">
            <s:Label id="exportPath" text="{project.exportPath.value}"/>
        </s:HGroup>
        <s:HGroup width="100%" height="100%">
            <s:VGroup height="100%">
                <s:HGroup verticalAlign="middle">
                    <s:Button label="Add level" click="onClickAddLevel()"/>
                    <s:Button label="Remove level" click="onClickRemoveLevel()"/>
                    <s:Label text="Level start number: "/>
                    <s:NumericStepper id="levelStartNum"
                                      value="{project.levelStartNum.value}"
                                      minimum="0" maximum="1000"
                                      change="project.levelStartNum.value = levelStartNum.value"/>
                </s:HGroup>
                <levels:LevelsList id="listSelectedLevels" width="400" height="100%"
                                   itemRenderer="com.grom.HRLevelExporter.views.levels.LevelItemRenderer"
                                   dragEnabled="true" dropEnabled="true" dragMoveEnabled="true"
                                   dataProvider="{project.levelsList.value}"/>
            </s:VGroup>

            <views:LevelPreview id="levelPreview" width="100%" height="100%"
                                background="{createBackground(project.previewBackground.value, project.classesList)}"/>

        </s:HGroup>

        <s:HGroup verticalAlign="middle">
            <s:Button id="buttonGameExec" label="Game Executable..."/>
            <s:Label text="{project.gamePath.value}"/>
        </s:HGroup>

        <s:HGroup verticalAlign="middle">
            <s:Button id="buttonWorkingFolder" label="Working Folder..."/>
            <s:Label text="{project.workFolder.value}"/>
        </s:HGroup>

    </s:VGroup>
</s:WindowedApplication>
